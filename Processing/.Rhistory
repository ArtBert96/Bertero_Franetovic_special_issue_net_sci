stargazer, purr, conflicted, devtools, naniar, ggplot)
#Packages conflicts
conflict_prefer("select", "dplyr")
conflict_prefer("filter", "dplyr")
conflict_prefer("lag", "dplyr")
options(max.print=999999)
options(scipen=999)
#Load database
issp_2019_original = read_dta(here("Input", "issp_social_inequality_2019", "ZA7600_v3-0-0.dta"))  %>%
clean_names()
#Select
issp_2019 = issp_2019_original %>%
filter(country==840) %>%
select(v1:v50)
#Rename
issp_2019 = issp_2019 %>%
rename(family = v1,
edupar = v2,
edu = v3,
work = v4,
people = v5,
connec = v6,
bribes = v7,
race = v8,
relig = v9,
sex = v10,
ineq_p = v21,
ineq_j = v50,
redis_p = v22,
redis_m = v24,
redis_d = v26,
redis_f = v27,
prog_b = v28,
reg_p = v29,
resp = v44,
train = v45,
need = v46,
merit = v47,
anger = v32)
#Reorder
issp_2019 = issp_2019 %>%
select(ineq_p,
reg_p,
prog_b,
ineq_j,
redis_d,
redis_f,
family,
edupar,
edu,
work,
people,
connec,
bribes,
race,
relig,
sex,
redis_p,
redis_m,
resp,
train,
need,
merit,
anger,
everything())
#Missing values and inverting polarity
issp_2019 = issp_2019 %>%
mutate(across(ineq_p:anger, ~replace(., .<0 , NA)),
across(family:sex,  ~ 6 - .),
across(c(ineq_p, redis_p, redis_m, redis_d, prog_b),  ~ 6 - .),
across(resp:merit,  ~ 6 - .))
#Select
issp_2019 = issp_2019 %>%
select(ineq_p:anger)
#full dataset for t-tests
issp_2019_full = issp_2019
#vis miss
missings = vis_miss(issp_2019)
ggsave(here("Output", "Supplement", "Fig_6.jpg"), missings)
#list-wise deletion
issp_2019 = na.omit(issp_2019)
# t-tests
for (col_name in colnames(issp_2019)) {
# Perform a t-test on the corresponding columns from each dataframe
t_test_result <- t.test(issp_2019[[col_name]], issp_2019_full[[col_name]])
# Print the results
cat("Column:", col_name, "\n")
cat("p-value:", t_test_result$p.value, "\n")
cat("Mean Difference:", t_test_result$estimate, "\n")
cat("\n")
}
t_test_result
knitr::opts_chunk$set(echo = TRUE)
#Libraries
library(pacman)
p_load(tidyverse, janitor, here, haven, labelled, sjmisc, skimr,
stargazer, purr, conflicted, devtools, naniar, ggplot)
#Packages conflicts
conflict_prefer("select", "dplyr")
conflict_prefer("filter", "dplyr")
conflict_prefer("lag", "dplyr")
options(max.print=999999)
options(scipen=999)
#Load database
issp_2019_original = read_dta(here("Input", "issp_social_inequality_2019", "ZA7600_v3-0-0.dta"))  %>%
clean_names()
#Select
issp_2019 = issp_2019_original %>%
filter(country==840) %>%
select(v1:v50)
#Rename
issp_2019 = issp_2019 %>%
rename(family = v1,
edupar = v2,
edu = v3,
work = v4,
people = v5,
connec = v6,
bribes = v7,
race = v8,
relig = v9,
sex = v10,
ineq_p = v21,
ineq_j = v50,
redis_p = v22,
redis_m = v24,
redis_d = v26,
redis_f = v27,
prog_b = v28,
reg_p = v29,
resp = v44,
train = v45,
need = v46,
merit = v47,
anger = v32)
#Reorder
issp_2019 = issp_2019 %>%
select(ineq_p,
reg_p,
prog_b,
ineq_j,
redis_d,
redis_f,
family,
edupar,
edu,
work,
people,
connec,
bribes,
race,
relig,
sex,
redis_p,
redis_m,
resp,
train,
need,
merit,
anger,
everything())
#Missing values and inverting polarity
issp_2019 = issp_2019 %>%
mutate(across(ineq_p:anger, ~replace(., .<0 , NA)),
across(family:sex,  ~ 6 - .),
across(c(ineq_p, redis_p, redis_m, redis_d, prog_b),  ~ 6 - .),
across(resp:merit,  ~ 6 - .))
#Select
issp_2019 = issp_2019 %>%
select(ineq_p:anger)
#full dataset for t-tests
issp_2019_full = issp_2019
#vis miss
missings = vis_miss(issp_2019)
ggsave(here("Output", "Supplement", "Fig_6.jpg"), missings)
#list-wise deletion
issp_2019 = na.omit(issp_2019)
# T-tests
paired_t_test_results_df <- data.frame(Column = character(0), P_Value = numeric(0), Mean_Difference = numeric(0))
# Loop through the columns of the dataframes
for (col_name in colnames(issp_2019)) {
# Perform a paired t-test on the corresponding columns from each dataframe
paired_t_test_result <- t.test(issp_2019[[col_name]], issp_2019_full[[col_name]], paired = TRUE)
# Add the results to the dataframe
paired_t_test_results_df <- rbind(
paired_t_test_results_df, data.frame(Column = col_name, P_Value = paired_t_test_result$p.value,
Mean_Difference = paired_t_test_result$estimate)) }
t_test_results_df <- data.frame(Column = character(0), P_Value = numeric(0), Mean_Difference = numeric(0))
# Loop through the columns of the dataframes
for (col_name in colnames(issp_2019)) {
# Perform a paired t-test on the corresponding columns from each dataframe
t_test_result <- t.test(issp_2019[[col_name]], issp_2019_full[[col_name]])
# Add the results to the dataframe
t_test_results_df <- rbind(
t_test_results_df, data.frame(Column = col_name, P_Value = t_test_result$p.value,
Mean_Difference = t_test_result$estimate)) }
t_test_results_df
t_test_result <- data.frame(
Variable = character(0),
Mean_First_Sample = numeric(0),
Mean_Second_Sample = numeric(0),
P_Value = numeric(0)
)
for (col_name in colnames(issp_2019)) {
t_test_result_temp <- t.test(issp_2019[[col_name]], issp_2019_full[[col_name]])
t_test_result <- rbind(
t_test_result,
data.frame(
Variable = col_name,
Mean_First_Sample = mean(issp_2019[[col_name]]),
Mean_Second_Sample = mean(issp_2019_full[[col_name]]),
P_Value = t_test_result_temp$p.value)) }
t_test_results_df
#build a nice df
t_test_result
#T-tests
t_test_result <- data.frame(
Variable = character(0),
Mean_First_Sample = numeric(0),
Mean_Second_Sample = numeric(0),
P_Value = numeric(0)
)
# Loop through the columns of the dataframes to do t-tests
for (col_name in colnames(issp_2019)) {
t_test_result_temp <- t.test(issp_2019[[col_name]], issp_2019_full[[col_name]])
t_test_result <- rbind(
t_test_result,
data.frame(
Variable = col_name,
Mean_First_Sample = mean(issp_2019[[col_name]]),
Mean_Second_Sample = mean(issp_2019_full[[col_name]], na.rm = TRUE),
P_Value = t_test_result_temp$p.value)) }
t_test_result
#export df
write.csv(t_test_result, here("Output", "Supplement", "t_test_result.csv"), row.names = F)
#export df
t_test_result = round(t_test_result, 3)
#export df
t_test_result[, sapply(t_test_result, is.numeric)] = round(t_test_result[, sapply(t_test_result, is.numeric)], 2)
write.csv(t_test_result, here("Output", "Supplement", "t_test_result.csv"), row.names = F)
t_test_result[, sapply(t_test_result, is.numeric)] = round(t_test_result[, sapply(t_test_result, is.numeric)], 3)
write.csv(t_test_result, here("Output", "Supplement", "t_test_result.csv"), row.names = F)
knitr::opts_chunk$set(echo = TRUE)
#Libraries
library(pacman)
p_load(tidyverse, janitor, here, haven, labelled, sjmisc, skimr,
stargazer, purr, conflicted, devtools, naniar, ggplot)
#Packages conflicts
conflict_prefer("select", "dplyr")
conflict_prefer("filter", "dplyr")
conflict_prefer("lag", "dplyr")
options(max.print=999999)
options(scipen=999)
#Load database
issp_2019_original = read_dta(here("Input", "issp_social_inequality_2019", "ZA7600_v3-0-0.dta"))  %>%
clean_names()
#Select
issp_2019 = issp_2019_original %>%
filter(country==840) %>%
select(v1:v50)
#Rename
issp_2019 = issp_2019 %>%
rename(family = v1,
edupar = v2,
edu = v3,
work = v4,
people = v5,
connec = v6,
bribes = v7,
race = v8,
relig = v9,
sex = v10,
ineq_p = v21,
ineq_j = v50,
redis_p = v22,
redis_m = v24,
redis_d = v26,
redis_f = v27,
prog_b = v28,
reg_p = v29,
resp = v44,
train = v45,
need = v46,
merit = v47,
anger = v32)
#Reorder
issp_2019 = issp_2019 %>%
select(ineq_p,
reg_p,
prog_b,
ineq_j,
redis_d,
redis_f,
family,
edupar,
edu,
work,
people,
connec,
bribes,
race,
relig,
sex,
redis_p,
redis_m,
resp,
train,
need,
merit,
anger,
everything())
#Missing values and inverting polarity
issp_2019 = issp_2019 %>%
mutate(across(ineq_p:anger, ~replace(., .<0 , NA)),
across(family:sex,  ~ 6 - .),
across(c(ineq_p, redis_p, redis_m, redis_d, prog_b),  ~ 6 - .),
across(resp:merit,  ~ 6 - .))
#Select
issp_2019 = issp_2019 %>%
select(ineq_p:anger)
#full dataset for t-tests
issp_2019_full = issp_2019
#vis miss
missings = vis_miss(issp_2019)
ggsave(here("Output", "Supplement", "Fig_6.jpg"), missings)
#list-wise deletion
issp_2019 = na.omit(issp_2019)
#T-tests
t_test_result <- data.frame(
Variable = character(0),
Mean_First_Sample = numeric(0),
Mean_Second_Sample = numeric(0),
P_Value = numeric(0)
)
# Loop through the columns of the dataframes to do t-tests
for (col_name in colnames(issp_2019)) {
t_test_result_temp <- t.test(issp_2019[[col_name]], issp_2019_full[[col_name]])
t_test_result <- rbind(
t_test_result,
data.frame(
Variable = col_name,
Mean_First_Sample = mean(issp_2019[[col_name]]),
Mean_Second_Sample = mean(issp_2019_full[[col_name]], na.rm = TRUE),
P_Value = t_test_result_temp$p.value)) }
#export df
t_test_result[, sapply(t_test_result, is.numeric)] = round(t_test_result[, sapply(t_test_result, is.numeric)], 3)
write.csv(t_test_result, here("Output", "Supplement", "t_test_result.csv"), row.names = F)
knitr::opts_chunk$set(echo = TRUE)
#Libraries
library(pacman)
p_load(tidyverse, janitor, here, haven, labelled, sjmisc, skimr,
stargazer, purr, conflicted, devtools, naniar, ggplot)
#Packages conflicts
conflict_prefer("select", "dplyr")
conflict_prefer("filter", "dplyr")
conflict_prefer("lag", "dplyr")
options(max.print=999999)
options(scipen=999)
#Load database
issp_2019_original = read_dta(here("Input", "issp_social_inequality_2019", "ZA7600_v3-0-0.dta"))  %>%
clean_names()
#Select
issp_2019 = issp_2019_original %>%
filter(country==840) %>%
select(v1:v50)
#Rename
issp_2019 = issp_2019 %>%
rename(family = v1,
edupar = v2,
edu = v3,
work = v4,
people = v5,
connec = v6,
bribes = v7,
race = v8,
relig = v9,
sex = v10,
ineq_p = v21,
ineq_j = v50,
redis_p = v22,
redis_m = v24,
redis_d = v26,
redis_f = v27,
prog_b = v28,
reg_p = v29,
resp = v44,
train = v45,
need = v46,
merit = v47,
anger = v32)
#Reorder
issp_2019 = issp_2019 %>%
select(ineq_p,
reg_p,
prog_b,
ineq_j,
redis_d,
redis_f,
family,
edupar,
edu,
work,
people,
connec,
bribes,
race,
relig,
sex,
redis_p,
redis_m,
resp,
train,
need,
merit,
anger,
everything())
#Missing values and inverting polarity
issp_2019 = issp_2019 %>%
mutate(across(ineq_p:anger, ~replace(., .<0 , NA)),
across(family:sex,  ~ 6 - .),
across(c(ineq_p, redis_p, redis_m, redis_d, prog_b),  ~ 6 - .),
across(resp:merit,  ~ 6 - .))
#Select
issp_2019 = issp_2019 %>%
select(ineq_p:anger)
#full dataset for t-tests
issp_2019_full = issp_2019
#vis miss
missings = vis_miss(issp_2019)
ggsave(here("Output", "Supplement", "Fig_6.jpg"), missings)
#list-wise deletion
issp_2019 = na.omit(issp_2019)
#T-tests
t_test_result <- data.frame(
Variable = character(0),
Mean_First_Sample = numeric(0),
Mean_Second_Sample = numeric(0),
P_Value = numeric(0)
)
# Loop through the columns of the dataframes to do t-tests
for (col_name in colnames(issp_2019)) {
t_test_result_temp <- t.test(issp_2019[[col_name]], issp_2019_full[[col_name]])
t_test_result <- rbind(
t_test_result,
data.frame(
Variable = col_name,
Mean_First_Sample = mean(issp_2019[[col_name]]),
Mean_Second_Sample = mean(issp_2019_full[[col_name]], na.rm = TRUE),
P_Value = t_test_result_temp$p.value)) }
#export df
t_test_result[, sapply(t_test_result, is.numeric)] = round(t_test_result[, sapply(t_test_result, is.numeric)], 3)
write.csv(t_test_result, here("Output", "Supplement", "t_test_result.csv"), row.names = F)
#issp_2019_nodes
issp_2019_nodes = issp_2019 %>%
select(ineq_p:merit)
#issp_2019_anger
issp_2019_anger = issp_2019 %>%
select(ineq_p:anger)
#issp_2019_can
#map(issp_2019_nodes, frq)
issp_2019_can = issp_2019_nodes %>% #truncation at means
mutate(ineq_p= ifelse(ineq_p<=4,0,1),
reg_p= ifelse(reg_p<=3,0,1),
prog_b= ifelse(prog_b<=4,0,1),
ineq_j= ifelse(ineq_j<=2,0,1),
redis_d= ifelse(redis_d<=4,0,1),
redis_f= ifelse(redis_f<=3,0,1),
family= ifelse(family<=2,0,1),
edupar= ifelse(edupar<=3,0,1),
edu= ifelse(edu<=4,0,1),
work= ifelse(work<=4,0,1),
people= ifelse(people<=3,0,1),
connec= ifelse(connec<=2,0,1),
bribes= ifelse(bribes<=1,0,1),
race= ifelse(race<=2,0,1),
relig= ifelse(relig<=1,0,1),
sex= ifelse(sex<=2,0,1),
redis_p= ifelse(redis_p<=3,0,1),
redis_m= ifelse(redis_m<=3,0,1),
resp= ifelse(resp<=4,0,1),
train= ifelse(train<=3,0,1),
need= ifelse(need<=2,0,1),
merit= ifelse(merit<=4,0,1))
#issp_2019_nodes
summary_issp_2019_nodes  = issp_2019_nodes %>%
skim() %>%
as.data.frame()
stargazer(as.data.frame(issp_2019_nodes), type = "text", nobs = TRUE)
#issp_2019_anger
summary_issp_2019_anger  = issp_2019_anger %>%
skim() %>%
as.data.frame()
stargazer(as.data.frame(issp_2019_anger), type = "html", nobs = TRUE)
#issp_2019_can
summary_issp_2019_can  = issp_2019_can %>%
skim() %>%
as.data.frame()
stargazer(as.data.frame(issp_2019_can), type = "html", nobs = TRUE)
#Save objects
save(issp_2019_nodes, issp_2019_anger, issp_2019_can,
file = here("Input", "usa_data.RData"))
missings
ggsave(here("Output", "Supplement", "Fig_6.jpg"), missings, width = 8)
ggsave(here("Output", "Supplement", "Fig_6.jpg"), missings, width = 9, height = 6)
ggsave(here("Output", "Supplement", "Fig_6.jpg"), missings, width = 10, height = 6)
ggsave(here("Output", "Supplement", "Fig_6.jpg"), missings, width = 10, height = 5)
ggsave(here("Output", "Supplement", "Fig_6.jpg"), missings, width = 10, height = 7)
ggsave(here("Output", "Supplement", "Fig_6.jpg"), missings, width = 11, height = 7)
ggsave(here("Output", "Supplement", "Fig_6.jpg"), missings, width = 12, height = 7)
ggsave(here("Output", "Supplement", "Fig_6.jpg"), missings, width = 15, height = 7)
ggsave(here("Output", "Supplement", "Fig_6.jpg"), missings, width = 15, height = 10)
ggsave(here("Output", "Supplement", "Fig_6.jpg"), missings, width = 15, height = 15)
